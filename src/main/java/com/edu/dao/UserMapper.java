package com.edu.dao;

import com.edu.pojo.User;
import org.apache.ibatis.annotations.Param;

import java.util.List;
//

public interface UserMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table neuedu_user
     *
     * @mbg.generated
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table neuedu_user
     *
     * @mbg.generated
     */
    int insert(User record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table neuedu_user
     *
     * @mbg.generated
     */
    User selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table neuedu_user
     *
     * @mbg.generated
     */
    List<User> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table neuedu_user
     *
     * @mbg.generated
     */
    int updateByPrimaryKey(User record);

    /**
     * 判断用户名是否存在
     */
    int isexistsusername(@Param("username") String username);

    /**
     * 判断邮箱是否存在
     */
    int isexistsemail(@Param("email") String email);

    /**
     * 根据用户名和密码
     */
    User findUserAndPwd(@Param("username") String username, @Param("password") String password);

    /**
     * 根据用户名获取密保问题接口
     * forget_get_question.do?username=admin
     */
    String forget_get_question(@Param("username") String username);

    /**
     * 提交答案接口
     * /user/forget_check_answer.do
     */
    int forget_check_answer(@Param("username") String username,
                            @Param("question") String question,
                            @Param("answer") String answer);

    /**
     * 修改密码
     * /user/forget_reset_password.do
     */
    int forget_reset_password(@Param("username") String username,
                              @Param("password") String newpassword);

    /**
     * 更新个人信息
     */
    int updateUserByActivate(@Param("user") User user);
    /**
     * 登录状态下修改密码
     */
    int updateLoginPassword(@Param("id")int id,@Param("newpassword")String  newpassword  );
    /**
     * 根据userID查询用户
     */
       String findUserNameByUserId(Integer id);
    /**
     * 根据用户名查询该用户
     */
    User findUserByUserName(@Param("username") String username);

}
