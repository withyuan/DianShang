<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.edu.dao.EvaluateMapper">
  <resultMap id="BaseResultMap" type="com.edu.pojo.Evaluate">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="product_id" jdbcType="INTEGER" property="productId" />
    <result column="detail" jdbcType="LONGVARCHAR" property="detail" />
    <result column="img" jdbcType="VARCHAR" property="img" />
    <result column="grade" jdbcType="INTEGER" property="grade" />
    <result column="order_no" jdbcType="BIGINT" property="orderNo" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from neuedu_evaluate
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.edu.pojo.Evaluate" useGeneratedKeys="true">
    insert into neuedu_evaluate (user_id, product_id,
      detail, img, grade,
      order_no, create_time)
    values ( #{userId,jdbcType=INTEGER}, #{productId,jdbcType=INTEGER},
      #{detail,jdbcType=LONGVARCHAR}, #{img,jdbcType=VARCHAR}, #{grade,jdbcType=INTEGER},
      #{orderNo,jdbcType=BIGINT}, now()
      )
  </insert>
  <select id="findByProductId" resultMap="BaseResultMap" parameterType="int">
    select * from neuedu_evaluate where product_id=#{productId}
  </select>
  <select id="count" resultType="int" parameterType="int">
    select count(id) from neuedu_evaluate where product_id=#{productId}
  </select>

  <!--<update id="updateByPrimaryKey" parameterType="com.edu.pojo.Product">
    &lt;!&ndash;
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    &ndash;&gt;
    update neuedu_product
    <set>
      <if test="name!=null">
        name=#{name},
      </if>
      <if test="subtitle!=null">
        subtitle=#{subtitle},
      </if>
      <if test="mainImage!=null">
        main_image=#{mainImage},
      </if>
      <if test="price!=null">
        price=#{price},
      </if>
      <if test="stock!=null">
        stock=#{stock},
      </if>
      <if test="status!=null">
        status=#{status},
      </if>
      <if test="isNew!=null">
        is_new=#{isNew},
      </if>
      <if test="isHot!=null">
        is_hot=#{isHot},
      </if>
      <if test="isBanner!=null">
        is_banner=#{isBanner},
      </if>
      <if test="subImages!=null">
        sub_images=#{subImages},
      </if>
      <if test="categoryId!=null">
        category_id=#{categoryId},
      </if>
      <if test="detail!=null">
        detail=#{detail},
      </if>
      update_time = now()
    </set>

    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    &lt;!&ndash;
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    &ndash;&gt;
    select id, category_id, name, subtitle, main_image, price, stock, status, is_new, 
    is_hot, is_banner, create_time, update_time, sub_images, detail
    from neuedu_product
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    &lt;!&ndash;
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    &ndash;&gt;
    select id, category_id, name, subtitle, main_image, price, stock, status, is_new, 
    is_hot, is_banner, create_time, update_time, sub_images, detail
    from neuedu_product
  </select>

  &lt;!&ndash;  根据ID修改状态&ndash;&gt;
  <update id="updateStatusById" parameterType="map">
    update neuedu_product set status=#{status} ,update_time=now() where id=#{id}
  </update>

&lt;!&ndash;  findProductsByNameAndId&ndash;&gt;

&lt;!&ndash;  searchProduct&ndash;&gt;
  <select id="searchProduct" resultMap="BaseResultMap" parameterType="map">
  select * from neuedu_product
  <where>
    <if test="integerSet!=null and integerSet.size>0">
      and  category_id in
      <foreach collection="integerSet" item="categoryId" open="(" close=")" separator=",">
        &lt;!&ndash;遍历类别ID的结合以（.....）中间以逗号分隔&ndash;&gt;
        #{categoryId}
      </foreach>
    </if>
    <if test="keyword!=null">
      and  name like #{keyword}
    </if>
  </where>
</select>
&lt;!&ndash;  reduceProductStock&ndash;&gt;
  <update id="reduceProductStock" parameterType="map">
    update neuedu_product set stock=#{stock} ,update_time=now() where id=#{productId}
  </update>
&lt;!&ndash;  selectIsNotHot&ndash;&gt;
  <select id="selectIsNotHot" resultMap="BaseResultMap" parameterType="map">
    select * from neuedu_product where  is_new = 1
  </select>

&lt;!&ndash;  selectCount&ndash;&gt;
  <select id="selectCount" resultType="int" parameterType="map">
    select count(id) from neuedu_product
    <where>
      <if test="productId!=null">
        and  id=#{productId}
      </if>
      <if test="productName!=null">
        and  name like #{productName}
      </if>
    </where>

  </select>-->
</mapper>
